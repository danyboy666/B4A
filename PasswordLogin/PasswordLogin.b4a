Build1=Default,b4a.example
File1=mlayout.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=1
NumberOfModules=1
Version=8.3
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: PasswordGenerator
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: Portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private pnl As Panel
	Private lblPassScreen As Label
	Private getUserInput As EditText
	Private lettersMaj() As String
	Private lettersMin() As String
	Private digits() As String
	Private btnValid As Button
	Private password As String
	Private newPassword As String
	Private allowedChars As List
	Private getVar As String
	Private ProgressBar1 As ProgressBar
	Private count As Short
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("mlayout")
	lblPassScreen.Text = ""
	'getUserInput.Text = "" 
	
	password = "eleve"
		'ProgressBar1 = True
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean 'Return True to consume the event

	Private Rep As Int
	Private Txt As String
 
	If KeyCode = KeyCodes.KEYCODE_BACK Then ' Teste si KeyCode est BackKey
		Txt = "Voulez-vous vraiment quitter programme ?"
		Rep = Msgbox2(Txt,"A T T E N T I O N","Oui","","Non",Null)' MessageBox
		If Rep = DialogResponse.POSITIVE Then ' Si Rep = Oui
			Return False ' Return = False l’événement ne sera pas consommé
		Else ' nous quittons le programme
			Return True ' Return = True l’événement sera consommé pour
		End If
	End If
End Sub


Sub getUserInput_TextChanged (Old As String, New As String)
	allowedChars.Initialize ' initialize allowed char array as list
	lettersMin = Array As String ("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z")
	lettersMaj = Array As String ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z")
	digits = Array As String ("1","2","3","4","5","6","7","8","9","0")
	'count = 1
	
'Do Until count <> 0
	

	'ProgressBar1.Progress = count
	
	For i = 0 To digits.Length - 1
		allowedChars.Add(digits(i))
	Next
	
	For j = 0 To lettersMin.Length -1 
		allowedChars.Add(lettersMin(j))
		allowedChars.Add(lettersMaj(j))
		'Log(allowedChars)
	Next
	
	For k = 0 To allowedChars.Size - 1
		If allowedChars.Get(k) <> getUserInput.Text Then
			Log("something")
			'ProgressBar1.Progress = k
		Else
			Log("ok passed")
			getVar = getVar & getUserInput.Text
			getUserInput.Text = ""
			Log("getVar is " & getVar)
		End If
	Next
'Loop
	newPassword = getVar
	Log("text_changed " & newPassword)
	lblPassScreen.Text = getVar

End Sub

Sub btnValid_Click
	'If getUserInput.Text = password Then
	Log(newPassword)
	If newPassword = password Then
		lblPassScreen.Text = "Correct password"
		Sleep(1000)
		lblPassScreen.Text = ""
		getUserInput.Text = ""
		getVar = ""
		Log("Correct password")
		
		'count = 0
	Else
		lblPassScreen.Text = "Incorrect password"
		Sleep(1000)
		lblPassScreen.Text = ""
		getUserInput.Text = ""
		getVar = ""
		Log("Incorrect password")
	End If
		'Log("password")
	
End Sub