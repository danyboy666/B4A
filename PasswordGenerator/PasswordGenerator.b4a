Build1=Default,b4a.example
File1=mlayout.bal
FileGroup1=Default Group
Group=Default Group
IconFile=
Library1=core
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.DarkTheme)~\n~'End of default text.~\n~
Module1=Starter
NumberOfFiles=1
NumberOfLibraries=1
NumberOfModules=1
Version=8.3
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: PasswordGenerator
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: Portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	'Private pnl As Panel
	Private lblPassScreen As Label
	'Private getUserInput As EditText
	Private lettersMaj = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" As String
	Private lettersMin = "abcdefghijklmnopqrstuvwxyz" As String
	Private digits = "1234567890" As String
	'Private specialChars = "*&%!#-+=()@?" As String
	Private combinedString As String 
	Private btnValid As Button
	Private password As String
	
	
	Private edtQTY As EditText
	Private lblQTY As Label
	Private chkDig As CheckBox
	Private chkMaj As CheckBox
	Private chkMin As CheckBox
	Private chkChar As CheckBox
	Private edtChar As EditText
	Private lblChar As Label
	Private lblTxtList As Label
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("mlayout")
	btnValid.Enabled = False
	'edtQTY.INPUT_TYPE_NUMBERS = 123
	edtQTY.InputType = edtQTY.INPUT_TYPE_NUMBERS
'	lblPassScreen.Text = ""
'	getUserInput.Text = "" 
	edtQTY.RequestFocus
		
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean 'Return True to consume the event

	Private Rep As Int
	Private Txt As String
 
	If KeyCode = KeyCodes.KEYCODE_BACK Then ' Teste si KeyCode est BackKey
		Txt = "Voulez-vous vraiment quitter programme ?"
		Rep = Msgbox2(Txt,"A T T E N T I O N","Oui","","Non",Null)' MessageBox
		If Rep = DialogResponse.POSITIVE Then ' Si Rep = Oui
			Return False ' Return = False l’événement ne sera pas consommé
		Else ' nous quittons le programme
			Return True ' Return = True l’événement sera consommé pour
		End If
		' éviter de quitter le programme
		'End If
		'End If
	End If
End Sub

Sub getUserInput_TextChanged (Old As String, New As String)
'	Log("getUserInput " & getUserInput.Text)
'	Log("lblPassScreen " & lblPassScreen.Text)
End Sub

Sub getCombinedString
	combinedString = ""
	
	If chkMin.Checked = True Then
		combinedString = combinedString & lettersMin
	End If
	If chkMaj.Checked = True Then
		combinedString = combinedString & lettersMaj
	End If
	If chkDig.Checked = True Then
		combinedString = combinedString & digits
	End If
	If chkChar.Checked = True Then
		combinedString = combinedString & edtChar.Text
	End If
	
End Sub


Sub btnValid_Click
	Private getPassLength As Byte
	'Private i = 0 As Byte
	'If getUserInput.Text = password Then
	'	lblPassScreen.Text = "Correct password"
	'Else
	'	lblPassScreen.Text = "Incorrect password"
	'End If
	'	Log("password")
	
	getCombinedString
	
	'combinedString = lettersMin & lettersMaj & digits
'	varLength = 0
	getPassLength = 0
	Log(edtQTY.Text)
	getPassLength = edtQTY.Text
	Log(getPassLength)

	Log(combinedString)
	
	'Log(i)
	For i = 1  To getPassLength
		password = password & combinedString.CharAt(Rnd(0,combinedString.Length)) ' retourne un nombre random de characteres a partir du chiffre specifier au depart edtQTY
	Next
	
	Log(password)
		lblPassScreen.Text = password
		
	Log(password)
		password = ""
End Sub

Sub edtQTY_TextChanged (Old As String, New As String)
	If (edtQTY.Text <> "") And ((chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True))  Then
		btnValid.Enabled = True
	Else
		btnValid.Enabled = False
	End If
	
End Sub


Sub chkMin_CheckedChange(Checked As Boolean)
	If (chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True) Or (chkChar.Checked = True) Then
			btnValid.Enabled = True
	Else 
			btnValid.Enabled = False
			getCombinedString
	End If

End Sub

Sub chkMaj_CheckedChange(Checked As Boolean)
	If (chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True) Or (chkChar.Checked = True) Then
		btnValid.Enabled = True
	Else
		btnValid.Enabled = False
		getCombinedString
	End If

	
End Sub

Sub chkDig_CheckedChange(Checked As Boolean)
	If (chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True) Or (chkChar.Checked = True) Then
		btnValid.Enabled = True
	Else
		btnValid.Enabled = False
		getCombinedString
	End If

	
End Sub



Sub chkChar_CheckedChange(Checked As Boolean)
	If (chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True) Or (chkChar.Checked = True) Then
		If chkChar.Checked = True Then
			lblTxtList.Visible = True
			'btnValid.Enabled = True
			edtChar.Visible = True
			'lblChar.Visible = True
			edtChar.RequestFocus
		Else
			'btnValid.Enabled = False
			lblTxtList.Visible = False
			edtChar.Visible = False
			lblChar.Visible = False
			edtQTY.RequestFocus
			'getCombinedString
		End If
	
	Else
		btnValid.Enabled = False
		edtChar.Text = ""
		getCombinedString
		
	End If
End Sub


Sub edtChar_TextChanged (Old As String, New As String)
	If (edtChar.Text <> "" ) Or (chkMin.Checked = True) Or (chkMaj.Checked = True) Or (chkDig.Checked = True) Then
		btnValid.Enabled = True
	Else
		btnValid.Enabled = False
		'getCombinedString
	End If

End Sub

Sub lblTxtList_Click
	
End Sub